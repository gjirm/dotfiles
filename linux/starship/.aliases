alias cls='clear'

alias ls="ls --color=auto --group-directories-first"
alias lz="eza -l --icons=auto --group-directories-first"
alias l="ls -lhF"
alias ll="ls -lahF"
alias ld="ls -lhd */"
alias lld="ls --color=always -lahF | grep --color=never '/$'"

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias tmux="tmux -u"

function update_dotfiles() {
    echo -e "\e[1;32m--> Updating $HOME/.dotfiles ...\e[0m"
    git -C $HOME/.dotfiles checkout .
    git -C $HOME/.dotfiles pull  
}

function update_starship() {
    echo -e "\e[1;32m--> Updating Starship prompt ...\e[0m"
    sudo sh -c "$(curl -fsSL https://starship.rs/install.sh)"
}

function starship_prompt() {
    local starshipPromptFile=$(fd -d 1 --extension toml . "$HOME/.dotfiles/linux/starship/.config" | fzf)
    export STARSHIP_CONFIG="$starshipPromptFile"
    sed -ie '/export STARSHIP_CONFIG.*/d' "$HOME/.zshrc_local"
    echo "export STARSHIP_CONFIG=\"$starshipPromptFile\"" >> "$HOME/.zshrc_local"
}

function fcd() {
    cd $(fd -HI -t d $@ . | fzf)
}

function mcd() {
    mkdir -p $1
    cd $1
}

# Editor
function fed() { 
    micro $(fd -HI -t f -t l $@ . | fzf)
}

# Git
function gitpush() {
    git add .
    git commit -m "$*"
    git pull
    git push
}

# Yazi
function yy() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

# Interactively start ssh sessions
function fs() {
    if [ $# -eq 0 ]
    then
        ssh $(cat ~/.ssh/config | grep -E "Host [^*]+" | awk '{ print $2 }' | fzf)
    else
        ssh $(cat ~/.ssh/config | grep -E "Host .*${1}.*" | awk '{ print $2 }' | fzf)
    fi
}

function fa () {
    PREFIX="${PASSAGE_DIR:-$HOME/.passage/store}"
    FZF_DEFAULT_OPTS=""
    name="$(cd "$PREFIX"; find . -type f -name '*.age' -exec sh -c '
    for f do
      f=${f#./}; printf "%s\n" "${f%.age}"
    done
    ' sh-find {} + | fzf --height 40% --reverse --no-multi)"
    passage "${@}" "$name"
}

function fac () {
    PREFIX="${PASSAGE_DIR:-$HOME/.passage/store}"
    FZF_DEFAULT_OPTS=""
    name="$(cd "$PREFIX"; find . -type f -name '*.age' -exec sh -c '
    for f do
      f=${f#./}; printf "%s\n" "${f%.age}"
    done
    ' sh-find {} + | fzf --height 40% --reverse --no-multi)"
    passage "${@}" "$name" | clip.exe
}

function gip() {
    curl -fsSL "https://ip.jirm.cz/json?ip=$1"
}

function syp() {
    
    message="$1"
    password=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 22 );
    # Expiration in seconds
    expiration=86400
    server="https://pass.safetica.cloud/"

    echo $password > pass.txt

    # encrypt message with pass.txt and replace newlines with "\n"
    message=$(echo $message | gpg -a --batch --passphrase-file pass.txt -c  --cipher-algo AES256 | sed ':a;N;$!ba;s/\n/\\n/g' );

    rm pass.txt

    payload=$(cat << EOF
{
"message": "${message}",
"expiration": ${expiration},
"one_time": true
}
EOF
)

    secret_id=$(curl -s -XPOST ${server}/secret -H 'Content-Type: application/json' -d "${payload}" |  jq -r .message)

    echo "$server/#/s/$secret_id/$password"
}

function dyp() {
    url="$1"
    server="https://pass.safetica.cloud"
    secret_id=$(echo "$url" | sed -n 's|.*/s/\([^/]*\)/.*|\1|p')
    password=$(echo "$url" | sed -n 's|.*/s/[^/]*/\([^/]*\).*|\1|p')

    curl -s "$server/secret/$secret_id" | \
    jq -r '.message' | \
    gpg --quiet --batch --yes --passphrase "$password" --decrypt
}

function dcroc() { 
    [ $# -eq 0 ] && set -- ""
    docker run --rm -it --user "$(id -u):$(id -g)" -v "$(pwd):/c" -v "$HOME/.config/croc:/.config/croc" -w /c -e CROC_SECRET schollz/croc "$@"
}

alias g='git'
alias gcl='git clone'
alias ga='git add'
alias gaa='git add .'
alias gs='git status'
alias gss='git status -s'
alias gg='git status'
alias ggg='git status -s'
alias gpull='git pull'
alias pull='git pull'
alias gp='git push'
alias gpush='git push'
alias push='git push'
alias gpp='git pull && git push'
alias gpo='git push origin'
alias gd='git diff'
alias gdd='git diff --cached'
alias gdw='git diff --color-words'
alias gdt='git difftool'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gcom='git commit -m'
alias grest='git restore'

# terraform
# ##########
alias tf='terraform'

# systemctl
###########
alias sc='sudo systemctl'
alias scst='sudo systemctl status'

# docker
###########
alias dcpull='docker compose pull'
alias dcup='docker compose up -d'
alias dccup='docker compose --compatibility up -d'
alias dcdown='docker compose down'
alias sdcpull='sudo docker compose pull'
alias sdcup='sudo docker compose up -d'
alias sdccup='sudo docker compose --compatibility up -d'
alias sdcdown='sudo docker compose down'

# ctop - tmux fix
##################
alias ctop='TERM="${TERM/#tmux/screen}" ctop'

# lazydocker
############
alias lzd='lazydocker'

alias bat='batcat'

alias pass='passage'

alias pst='curl -F "lesma=<-" "https://paste.jirm.cz"'